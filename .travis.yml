language: cpp

env:
  global:
    - QT5_INSTALL_PREFIX="/usr/local/qt5-static"
    - secure: "f5KWIIVpVdy66JpgiWbu/Ua9lbDmQJ0lxuki0GNL0d8WAetPlsFONgg0Ujr+vchFcz18FR58sTYAamxUPejrfjNXqeTNXAKPEqB2DZZlOs6v59SJx0NN7zZM2S+l03z9XBzdAq7VsFOrdqcPtiCv9LeHPGdSsrLqEuxBip7BQ1GAuFTIEOocYlbCFzhdnTY5fOKkagyUqxITMtgO/sNWX0052w/1mKs3iO41jlXkj897c7uW7ekx2mQ/MIMW5smcEm37IeZ02WWK8aKCXoFLq0RppP1UzDfqDYcJk5N+pVRDfXz6VHz0QOYYIDNLXC+RMbVeLo6rA4HCo7UhTl+GXfCjgsWocX4Kc48L0xiZus7kwscyFOSyRdzwMFXFppAfsr9GBuFhMdsvRfD1DtTWKOk1tyU/6h+6MdiB/bDkA1R3BVjVkwNuJfu0jZKGX2tXn6ZeFxWl++XlOrHkklRLWh7gLLBe8jKQfn15Ee7GyvBZytK0LDGKxLPupnTeWtIA65ucXYDUHzNbEr2SnQ3XCGJ+uyp52NPXeMVySdyxEj+vMDAtpLe4jQiYKqn8Mz/eyTf3tJdru2BTB4rFyrCpUW3yCn3WEffiF79ruAya3rBwv8ST4zFAmqUoAoBkt6Iz2URLYmGAbUq5VpggRLgljsa27dRDLdpyUWZanlhsxfo="

matrix:
  include:
    # linux release build: gcc 5.4.0 on ubuntu 16.04
    - os: linux
      dist: xenial
      compiler: gcc
      addons:
        apt:
          packages:
            - libc6-dbg
            - libxkbcommon-dev
            - lcov
      services: xvfb
      env: 
        - DEPLOY_FILE="spatial-model-editor"
      install:
        # install a recent version of valgrind to run tests
        - wget "https://github.com/lkeegan/travis-binaries/releases/latest/download/valgrind"
        - sudo cp valgrind /usr/local/bin/.
        - valgrind --version
      after_script:
        # upload coverage report to codecov.io
        - lcov --directory ../build-tests --capture --output-file coverage.info
        - lcov --remove coverage.info "catch/*" "/usr/*" "*/catch/*" "*/test/*" "*/QtCore/*" "*/libsbml/*" "*/exprtk/*" "*/build-tests/*" "*/qcustomplot/*" --output-file coverage.info
        - lcov --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -X gcov -f "coverage.info"
    # osx release build: xcode 9.4.1 [9F2000], macOS 10.13
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env: DEPLOY_FILE="spatial-model-editor.dmg"
    # linux build for coverity scan (only runs on push to "coverity_scan" branch)
    - os: linux
      dist: xenial
      compiler: gcc
      before_install:
        - '[ "$TRAVIS_BRANCH" == coverity_scan ] || exit 0'
        - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      addons:
        apt:
          packages:
            - libxkbcommon-dev
        coverity_scan:
          project:
            name: "lkeegan/spatial-model-editor"
            description: "Spatial Model Editor"
          notification_email: liam@keegan.ch
          build_command_prepend: "qmake spatial-model-editor.pro"
          build_command: "make"
          branch_pattern: coverity_scan

before_script:
  # install pre-compiled Qt5 binaries & static libraries to $QT5_INSTALL_PREFIX
  # (note this has to match the install prefix hard coded in the pre-compiled library)
  - wget "https://github.com/lkeegan/qt5-static/releases/latest/download/qt5-static-$TRAVIS_OS_NAME.tgz"
  - sudo tar xzvf qt5-static-$TRAVIS_OS_NAME.tgz -C /
  # export path for Qt5 binaries
  - export PATH=$QT5_INSTALL_PREFIX/bin:$PATH
  - qmake -v
  # download pre-compiled static libSBML library
  - cd ext
  - wget "https://github.com/lkeegan/libsbml-static/releases/latest/download/libsbml-static-$TRAVIS_OS_NAME.tgz"
  - mkdir -p libsbml
  - tar xzvf libsbml-static-$TRAVIS_OS_NAME.tgz -C libsbml
  - ls libsbml
  - cd ..

script:
  # if coverity_scan is enabled, skip script
  - '[ "$COVERITY_SCAN_BRANCH" != 1 ] || exit 0'
  # run qmake to generate make file
  - mkdir build
  - cd build
  - qmake -Wall -config release ../spatial-model-editor.pro
  # compile executable
  - make -j2
  # check dependencies of resulting executable
  - '[ "$TRAVIS_OS_NAME" != osx ] || otool -L spatial-model-editor.app/Contents/MacOS/spatial-model-editor'
  - '[ "$TRAVIS_OS_NAME" != linux ] || ldd spatial-model-editor'
  # for osx package app dir as a .dmg
  - '[ "$TRAVIS_OS_NAME" != osx ] || hdiutil create spatial-model-editor -fs HFS+ -srcfolder spatial-model-editor.app'
  # compile and run unit tests
  - cd ../
  - mkdir build-tests
  - cd build-tests
  - '[ "$TRAVIS_OS_NAME" != linux ] || qmake -Wall -config debug ../test.pro'
  # NB -config debug fails on osx because it looks for non-existent "debug" qt5 static libraries
  - '[ "$TRAVIS_OS_NAME" != osx ] || qmake -Wall -config release ../test.pro'
  - make -j2
  - '[ "$TRAVIS_OS_NAME" != linux ] || valgrind ./test -d=yes'
  - '[ "$TRAVIS_OS_NAME" != osx ] || ./test.app/Contents/MacOS/test -d=yes'
  - cd ../build

notifications:
  email: false
deploy:
  # if build is tagged, upload executable to github release
  provider: releases
  api_key:
    secure: E0WtptZea2n40eN+FBYZ2XYv/pjKUjVFZavl8BTVYhidzXYuT/DvhoehPVauJRy/t5QLMtmyd5ww9dhYkIcNcpAc1INrUlYG274D8xgXwbgsftmFbMqdrKR9f/qkynP0r6LCd1p0Tuhxxf37OcTYVEOjbvV+KsTzpWHtS9AqZGvMfv/rpI4r/Zu/LfGBs2T7Rr8Mlfy5YBI2L7lGka3ziTIic01pKDfjHJQ2xD2N366mEqcpB0vjF8c9b+qIUbQ8g8ybLoMfKM6ZSvcpz2NmLQK8l8gzzTN/k1PI2DJxmzi+9G031RXLAXvbR8I8NEQlZfsicepHk0m13EI7x5/TIGaa2ngSgX1W7oAL0IAkJFpcWcN5RQOgowCBAB/UnHCX8EgnBAiD8eTlc4DUC2WY84Dr3EcdhLg0bEX/Ky4mDAxt0QgABG0hEU3kE6USsUvp7IZmnCEdu8e+F/HRmvSUqECI9FvjmpHdBHwIv6anVA2pndN/ZGn4+4BWbo6IwycAh0FPAnvvs6guxnOqQW/eMRgBI3y4grzEYP/bPzlL1W6q42r6fwvh45LtcgC+joAoJCL3I51QcZ1joMY/OShSaKi3MnokImmb/GPRvebe3hDGGSsEAarrmIRb0zCMYDMdHzA+pqeojGZf6SCfIculmeE1MO2t/DqumxQRxTGx+8k=
  file: $DEPLOY_FILE
  skip_cleanup: true
  on:
    repo: lkeegan/spatial-model-editor
    overwrite: true
    tags: true
    all_branches: true
    condition: $DEPLOY_FILE != ""
